name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/f32f3g423w23efg32"
  IMAGE_NAME: "chat_service"
  CONTAINER_NAME: "chat_service-container"
  PORT: 50060

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest
    environment: chat-env

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f Dockerfile .

  deploy-image:
    runs-on: ubuntu-latest
    environment: chat-env
    needs: image-build-and-push

    steps:

      - name: Debug secrets availability
        run: |
          if [ -z "${{ secrets.SSH_KEY }}" ]; then
            echo "SSH_KEY is not set"
          else
            echo "SSH_KEY is set"
          fi

      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME,PORT

          script: |
            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            # Stop running container
            docker stop $CONTAINER_NAME || true
            
            # Remove old container
            docker rm $CONTAINER_NAME || true
            
            # Run a new container from a new image
            docker run -d -p $PORT:$PORT --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME